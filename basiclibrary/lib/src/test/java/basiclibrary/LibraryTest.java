/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test void someLibraryMethodReturnsTrue() {
        Library classUnderTest = new Library();
        assertTrue(classUnderTest.someLibraryMethod(), "someLibraryMethod should return 'true'");
    }
    @Test void rollMethodWorks() {
        Library classUnderTest = new Library();
        boolean correctLength = false;
        boolean correctRange = true;
        int[] rollReturnVal = classUnderTest.roll(4);
        if (rollReturnVal.length == 4) correctLength = true;
        for (int el : rollReturnVal) {
            if (el < 1 || el > 6) correctRange = false;
        }
        if (correctLength && correctRange) System.out.println("works");
        else System.out.println("broken");
    }
    @Test void containsDuplicatesMethodWorks() {
        Library classUnderTest = new Library();
        int[] arr = {1 , 1 , 3};
        assertTrue(classUnderTest.containsDuplicates(arr), "containsDuplicates should return 'true'");
    }
    @Test void calcAveragesMethodWorks() {
        Library classUnderTest = new Library();
        int[] arr = {2, 3, 4};
        assertEquals(3, classUnderTest.calcAverages(arr), "calcAverages should return 3");
    }
    @Test void arrayOfArraysMethodWorks() {
        Library classUnderTest = new Library();
        int[][] arr = {
                {1,1,1},
                {2,2,2},
                {3,3,3}
        };
        int[] correctArr = {1,1,1};
        assertArrayEquals(correctArr, classUnderTest.arrayOfArrays(arr));
    }
    @Test void uniqueWeatherMethodWorks() {
        Library classUnderTest = new Library();
        String returnVal = classUnderTest.findUniqueWeather();
        if (returnVal.equals("High: 72 \nLow: 51 \nNever saw temperature: 63 \nNever saw temperature: 67 \nNever saw temperature: 68 \nNever saw temperature: 69")) {
            System.out.println("works");
        } else {
            System.out.println(returnVal);
        }
    }
    @Test void tallyMethodWorks() {
        Library classUnderTest = new Library();
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");
        String returnVal = classUnderTest.tally(votes);
        assertEquals("Bush", returnVal);
    }
}
